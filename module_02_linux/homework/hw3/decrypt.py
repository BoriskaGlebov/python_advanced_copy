"""
Вася решил передать Пете шифрограмму.
Поскольку о промышленных шифрах Вася ничего не знает,
он решил зашифровать сообщение следующим образом: он посылает Пете строку.

Каждый символ строки — либо буква, либо пробел, либо точка «.», либо две точки «..».
Если после какой-то буквы стоит точка, значит, мы оставляем букву без изменений
(об одной точке Вася задумался, чтобы усложнить расшифровку). Саму точку при этом надо удалить.
Если после какой-то буквы стоят две точки, то предыдущий символ надо стереть. Обе точки при этом тоже нужно удалить.
Возможна ситуация, когда сообщение после расшифровки будет пустым.
В качестве результата можно вернуть просто пустую строку.

Примеры шифровок-расшифровок:

абра-кадабра. → абра-кадабра
абраа..-кадабра → абра-кадабра
абраа..-.кадабра → абра-кадабра
абра--..кадабра → абра-кадабра
абрау...-кадабра → абра-кадабра (сначала срабатывает правило двух точек, потом правило одной точки)
абра........ → <пустая строка>
абр......a. → a
1..2.3 → 23
. → <пустая строка>
1....................... → <пустая строка>

Помогите Пете написать программу для расшифровки.
Напишите функцию decrypt, которая принимает на вход шифр в виде строки, а возвращает расшифрованное сообщение.

Программа должна работать через конвейер (pipe):

$ echo  ‘абраа..-.кадабра’ | python3 decrypt.py
абра-кадабра

Команда echo выводит текст (в стандартный поток вывода).
"""

import sys


def decrypt(encryption: str) -> str:
    """
    Каждый символ строки — либо буква, либо пробел, либо точка «.», либо две точки «..».
    Если после какой-то буквы стоит точка, значит, мы оставляем букву без изменений
    (об одной точке Вася задумался, чтобы усложнить расшифровку). Саму точку при этом надо удалить.
    Если после какой-то буквы стоят две точки, то предыдущий символ надо стереть. Обе точки при этом тоже нужно удалить.
    Возможна ситуация, когда сообщение после расшифровки будет пустым.
    В качестве результата можно вернуть просто пустую строку.
    :param encryption: Строка для декодирования
    :return: декодировнный текст
    """
    decrypt_str: list = []
    point_count = 0
    for num, letter in enumerate(encryption):
        if letter != ".":
            point_count = 0
            decrypt_str.append(letter)
            continue
        elif letter == "." or letter == " ":
            point_count += 1
        if point_count == 2:
            point_count = 0
            if len(decrypt_str):
                decrypt_str.pop()
    decrypt_str: str = "".join(decrypt_str)
    # print(decrypt_str.split())
    # print(len(decrypt_str))
    if len(decrypt_str) > 1:  # Выяснилось что в консоли пустой список имеет длинну 1.
        # Не совсем понял как иак получается
        return decrypt_str
    else:
        return "Пустая строка"


if __name__ == "__main__":
    # data: str = sys.stdin.read()
    # print(data)
    # decryption: str = decrypt(data)
    # print(decryption)

    # data: str = sys.stdin.read()
    str_in = [
        "абра-кадабра.",
        "абраа..-кадабра",
        "абраа..-.кадабра",
        "абра--..кадабра",
        "абрау...-кадабра",
        "абра........",
        "абр......a.",
        "1..2.3",
        ".",
        "1.......................",
    ]
    for el in str_in:
        decryption: str = decrypt(el)
        print(decryption)
